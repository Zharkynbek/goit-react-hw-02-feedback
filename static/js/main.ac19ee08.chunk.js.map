{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","App.js","index.js"],"names":["FeedbackOptions","onChangeFeedback","className","Button","name","variant","color","onClick","e","currentTarget","Statistics","good","neutral","bad","positivePercentage","total","Section","App","state","handleChangeFeedback","setState","prevState","getPositivePercentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAuCeA,EAlCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACtB,sBAAKC,UAAU,UAAf,UACE,sBAAMA,UAAU,UAAhB,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,QAAQ,YACRC,MAAM,UACNC,QAAS,SAACC,GAAD,OAAOP,EAAiBO,EAAEC,cAAcL,OAJnD,kBAUF,sBAAMF,UAAU,aAAhB,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,UACLC,QAAQ,YACRE,QAAS,SAACC,GAAD,OAAOP,EAAiBO,EAAEC,cAAcL,OAHnD,kBASF,cAACD,EAAA,EAAD,CACEC,KAAK,MACLC,QAAQ,YACRC,MAAM,YACNC,QAAS,SAACC,GAAD,OAAOP,EAAiBO,EAAEC,cAAcL,OAJnD,oBCZWM,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,mBAAoBC,EAA3C,EAA2CA,MAA3C,OACjB,qCACE,4CACA,sBAAKb,UAAU,aAAf,UACE,oBAAGA,UAAU,OAAb,mBAA2BS,KAC3B,oBAAGT,UAAU,UAAb,sBAAiCU,KACjC,oBAAGV,UAAU,MAAb,kBAAyBW,KACzB,oBAAGX,UAAU,QAAb,oBAA6Ba,KAC7B,oBAAGb,UAAU,mBAAb,gCAAoDY,YCc3CE,EArBC,SAAC,GAAD,IACdL,EADc,EACdA,KACAC,EAFc,EAEdA,QACAC,EAHc,EAGdA,IACAE,EAJc,EAIdA,MACAD,EALc,EAKdA,mBACAb,EANc,EAMdA,iBANc,OAQd,qCACE,uDACA,cAAC,EAAD,CAAiBA,iBAAkBA,MACjCc,GAAS,cAAC,EAAD,CACTJ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLE,MAAOA,EACPD,mBAAoBA,QCoBXG,E,4MAnCbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,qBAAuB,SAACf,GACtB,EAAKgB,UAAS,SAACC,GACb,OAAO,eACJjB,EAAOiB,EAAUjB,GAAQ,O,EAMhCkB,sBAAwB,WACtB,MAA+B,EAAKJ,MAA5BP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OAAOF,EAAOY,KAAKC,KAAMb,GAAQC,EAAUC,EAAMF,GAAS,KAAO,IAAM,M,4CAEzE,WACE,OACE,8BACE,cAAC,EAAD,CACEV,iBAAkBwB,KAAKN,qBACvBR,KAAMc,KAAKP,MAAMP,KACjBC,QAASa,KAAKP,MAAMN,QACpBC,IAAKY,KAAKP,MAAML,IAChBE,MAAOU,KAAKP,MAAMP,KAAOc,KAAKP,MAAMN,QAAUa,KAAKP,MAAML,IACzDC,mBAAoBW,KAAKH,gC,GA7BjBI,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ac19ee08.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./FeedbackOptions.css\"\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nconst FeedbackOptions = ({ onChangeFeedback }) => (\r\n  <div className=\"Counter\">\r\n    <span className=\"goodBtn\">\r\n      <Button\r\n        name=\"good\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e) => onChangeFeedback(e.currentTarget.name)}\r\n      >\r\n        :)\r\n      </Button>\r\n    </span>\r\n\r\n    <span className=\"neutralBtn\">\r\n      <Button\r\n        name=\"neutral\"\r\n        variant=\"contained\"\r\n        onClick={(e) => onChangeFeedback(e.currentTarget.name)}\r\n      >\r\n        :|\r\n      </Button>\r\n    </span>\r\n\r\n    <Button\r\n      name=\"bad\"\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      onClick={(e) => onChangeFeedback(e.currentTarget.name)}\r\n    >\r\n      :(\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from \"react\"\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, positivePercentage, total }) => (\r\n  <>\r\n    <h2>Statistics</h2>\r\n    <div className=\"Statistics\">\r\n      <p className=\"Good\">Good: {good}</p>\r\n      <p className=\"Neutral\">Neutral: {neutral}</p>\r\n      <p className=\"Bad\">Bad: {bad}</p>\r\n      <p className=\"Total\">Total: {total}</p>\r\n      <p className=\"positiveFeedback\">Positive feedback: {positivePercentage}</p>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Statistics;","import React from \"react\"\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\"\r\nimport Statistics from \"../Statistics/Statistics\"\r\n\r\nconst Section = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  onChangeFeedback,\r\n}) => (\r\n  <>\r\n    <h1>Please leave feedback</h1>\r\n    <FeedbackOptions onChangeFeedback={onChangeFeedback} />\r\n   {!!total && <Statistics\r\n      good={good}\r\n      neutral={neutral}\r\n      bad={bad}\r\n      total={total}\r\n      positivePercentage={positivePercentage}\r\n    />}\r\n  </>\r\n);\r\n\r\nexport default Section","import React, {Component} from \"react\"\nimport Section from \"./components/Section/Section\"\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChangeFeedback = (name) => {\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n\n  getPositivePercentage = () => {\n    const { good, neutral, bad } = this.state\n    return good ? Math.ceil((good / (neutral + bad + good)) * 100) + '%' : 0 + '%'\n  }\n  render() {\n    return (\n      <div>\n        <Section\n          onChangeFeedback={this.handleChangeFeedback}\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.state.good + this.state.neutral + this.state.bad}\n          positivePercentage={this.getPositivePercentage()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}